!function(){"use strict";class t{constructor(t,e){this._config=t,this._formElement=e,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}_showInputError(t,e){const s=this._formElement.querySelector(`.${t.id}-error`);t.classList.add(this._config.inputErrorClass),s.textContent=e,s.classList.add(this._config.errorClass)}_hideInputError(t){const e=this._formElement.querySelector(`.${t.id}-error`);t.classList.remove(this._config.inputErrorClass),e.classList.remove(this._config.errorClass),e.textContent=""}_isValid(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._isValid(t),this._toggleButtonState()}))})),this._formElement.addEventListener("reset",(()=>{this._inputList.forEach((t=>{this._hideInputError(t)}))}))}_setSubmitEventListeners(){this._formElement.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}enableValidation(){this._setSubmitEventListeners(),this._toggleButtonState()}}const e={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},s=document.querySelector(".profile"),r=document.querySelector(".form__name"),i=document.querySelector(".form__job"),n=document.querySelector(".profile__title"),a=document.querySelector(".profile__text"),o=document.querySelector(".profile__image"),c=document.querySelector(".form__button-save"),l=document.querySelector(".form__button-create"),h=document.querySelector(".card"),d=document.querySelector(".pop-up"),_=document.querySelector(".form-edit"),u=document.querySelector(".form-add"),m=document.querySelector(".form-confirm-container"),p=document.querySelector(".form-avatar");class f{constructor(t,e,s,r,i){this._card=t,this._name=this._card.name,this._link=this._card.link,this._likes=this._card.likes,this._id=this._card._id,this._ownerId=this._card.owner._id,this._userId=e,this._handleCardClick=s,this._handleLikeClick=r,this._handleDeleteClik=i,this._cardTemplate=document.querySelector("#cardTemplate").content.querySelector(".card__item"),this._cardElement=this._cardTemplate.cloneNode(!0),this._cardLikes=this._cardElement.querySelector(".card__likes-text")}generateCard(){return this._setEventListeners(),this._cardElement.querySelector(".card__image").setAttribute("src",this._link),this._cardElement.querySelector(".card__image").setAttribute("alt",this._name),this._cardElement.querySelector(".card__title").textContent=this._name,this._cardElement.querySelector(".card__title").setAttribute("title",this._name),this._cardElement.querySelector(".card__likes-text").textContent=this._likes.length,this._isLiked()&&this._cardElement.querySelector(".card__icon").classList.toggle("toggle"),this._deleteButton=this._cardElement.querySelector(".card__icon-delete"),this._ownerId!==this._userId&&this._deleteButton.classList.add("card__icon-delete_hidden"),this._cardElement}_handleLikeCard(){const t=this._isLiked();if(this._cardElement.querySelector(".card__icon").classList.toggle("toggle"),this._handleLikeClick(this._card,this._id,t),t){const t=this._likes.findIndex((t=>t._id===this._userId));-1!==t&&(this._likes.splice(t,1),console.log(this._likes),this._cardLikes.textContent=this._likes.length)}else this._likes.push({_id:this._userId,name:this._card.owner.name}),console.log(this._likes),this._cardLikes.textContent=this._likes.length}_isLiked(){for(let t=0;t<this._likes.length;t++)if(this._likes[t]&&this._likes[t]._id===this._userId)return!0;return!1}_setEventListeners(){this._cardElement.addEventListener("click",(t=>{if(t.target.classList.contains("card__icon-delete"))this._handleDeleteClik(this._cardElement,this._id,this._name);else if(t.target.classList.contains("card__icon"))this._handleLikeCard();else{if(!t.target.classList.contains("card__image"))return;this._handleCardClick({name:this._name,link:this._link})}}))}}class E{constructor(t){this._popup=t,this._overlay=document.querySelector(".overlay")}open(){this._overlay.classList.add("block"),this._popup.classList.add("block")}close(){this._popup.classList.remove("block"),this._popup.classList.add("close"),this._overlay.classList.remove("block"),this._overlay.classList.add("close"),setTimeout((()=>{this._popup.classList.remove("close"),this._overlay.classList.remove("close")}),300)}_handleEscClose(t){27===t.keyCode&&this.close()}setEventListeners(){this._popup.addEventListener("click",(t=>{(t.target.classList.contains("pop-up__icon")||t.target.classList.contains("form__icon")||t.target.classList.contains("pop-up__icon-confirm"))&&this.close()})),document.addEventListener("keydown",(t=>{this._handleEscClose(t)})),this._overlay.addEventListener("click",(t=>{t.target.classList.contains("overlay")&&this.close()}))}}class v extends E{constructor(t,e){super(t),this._callback=e,this._formSelector=t.querySelector("form")}_getInputValues(){const t=new FormData(this._formSelector),e={};for(const[s,r]of t.entries())e[s]=r;return e}showPatchStatus(t){return this._formSelector.querySelectorAll(".form__button").forEach((e=>{e.textContent=t?"Menyimpan...":this._submitButtonValue})),this}setEventListeners(){super.setEventListeners(),this._formSelector.addEventListener("submit",(t=>{t.preventDefault(),this._callback(this._getInputValues())}))}close(){super.close(),this._formSelector.reset()}}class g{constructor({sectionProfile:t,alertContainer:e,alertText:s}){this.sectionProfile=t,this.alertContainer=document.createElement(e),this.alertText=document.createElement(s)}generateAlertBox(t){this.alertContainer.classList.add("alert"),this.alertText.classList.add("alert__text"),this.alertText.textContent=t,this._addItemAlertBox(),this._deleteAlertBox()}_addItemAlertBox(){this.alertContainer.append(this.alertText),this.sectionProfile.before(this.alertContainer)}_deleteAlertBox(){setTimeout((()=>{this.alertContainer.classList.add("close")}),3e3),setTimeout((()=>{this.alertContainer.classList.remove("close"),this.alertContainer.remove()}),4e3)}}const L=new class{constructor({baseUrl:t,headers:e}){this.baseUrl=t,this.headers=e}getInitialCardsAndUserInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}async getUserInfo(){const t=await fetch(`${this.baseUrl}/users/me`,{headers:this.headers});return t.ok?t.json():Promise.reject(`Error: ${t.status}`)}async getInitialCards(){const t=await fetch(`${this.baseUrl}/cards`,{headers:this.headers});return t.ok?t.json():Promise.reject(`Error: ${t.status}`)}async postNewCard(t){const e=await fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:t.inputJudul,link:t.inputTautanGambar})});return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}async updateLikeCard(t,e){const s=e?"DELETE":"PUT",r=await fetch(`${this.baseUrl}/cards/likes/${t}`,{headers:this.headers,method:s});return r.ok?r.json():Promise.reject(`Error: ${r.status} `)}async deleteCard(t){const e=await fetch(`${this.baseUrl}/cards/${t}`,{method:"DELETE",headers:this.headers});return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}async patchUserInfo(t){const e=await fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t.inputName,about:t.inputJob})});return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}async patchAvatarUser(t){const e=await fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})});return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around.nomoreparties.co/v1/web_idn_cohort_01",headers:{authorization:"a55a2a11-c51d-4757-bac3-b5d796b811b7","Content-Type":"application/json"}}),b=new class{constructor(t,e,s){this._name=t,this._job=e,this._avatar=s}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(t){this._name.textContent=t.inputName,this._job.textContent=t.inputJob}setUserAvatar(t){this._avatar.src=t}}(n,a,o),S=new v(_,(function(t){console.log(S.showPatchStatus(!0)),S.showPatchStatus(!0),L.patchUserInfo(t).then((()=>{b.setUserInfo(t)})).then((()=>{S.showPatchStatus(!1)})).then((()=>{I.generateAlertBox(`Selamat perubahan data ${t.inputName} dan ${t.inputJob} telah berhasil !!!`)})).then((()=>{S.close()})).catch((t=>{console.log(t),S.showPatchStatus(!1)}))})),k=new v(u,(function(t){k.showPatchStatus(!0),L.postNewCard(t).then((t=>{x.addItem(j(t,t.owner._id),!0)})).then((()=>{k.showPatchStatus(!1)})).then((()=>{q.generateAlertBox(`Selamat data berhasil di tambahkan dengan judul ${t.inputJudul}`)})).then((()=>{k.close()})).catch((t=>{console.log(t),k.showPatchStatus(!1)}))})),y=new v(p,(function(t){console.log(y),console.log(y.showPatchStatus(!0)),y.showPatchStatus(!0),L.patchAvatarUser(t.inputAvatar).then((()=>{b.setUserAvatar(t.inputAvatar)})).then((()=>{y.showPatchStatus(!1)})).then((()=>{P.generateAlertBox(`Selamat perubahan foto profil dari ${t.inputAvatar} telah berhasil !!!`)})).then((()=>{y.close()})).catch((t=>{y.showPatchStatus(!1),console.log(t)}))})),C=new class extends E{constructor(t){super(t),this._popupImage=document.querySelector(".pop-up__image"),this._popupCaption=document.querySelector(".pop-up__title")}open(t){this._popupImage.setAttribute("src",t.link),this._popupImage.setAttribute("alt",t.name),this._popupCaption.textContent=t.name,super.open()}}(d),w=new class extends E{constructor(t,e){super(t),this._callback=e,this._form=t.querySelector("form")}open(t,e,s){super.open(),this._cardElemet=t,this._id=e,this._cardName=s}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._callback(this._cardElemet,this._id,this._cardName)}))}close(){super.close()}}(m,(function(t,e,s){L.deleteCard(e).then((()=>{w.close(),t.remove()})).then((()=>{A.generateAlertBox(`Selamat card ${s} telah dihapus !!!`)})).catch((t=>{console.log(t)}))})),x=new class{constructor({items:t,renderer:e},s){this._items=t,this._renderer=e,this._container=s}renderer(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t,e){e?this._container.prepend(t):this._container.append(t)}}({items:[],renderer:()=>{}},h),I=new g({sectionProfile:s,alertContainer:"section",alertText:"h3"}),q=new g({sectionProfile:s,alertContainer:"section",alertText:"h3"}),P=new g({sectionProfile:s,alertContainer:"section",alertText:"h3"}),A=new g({sectionProfile:s,alertContainer:"section",alertText:"h3"});function U(t){C.open(t)}function T(t,e,s){L.updateLikeCard(e,s).then((e=>{t._likes=e.likes})).catch((t=>{console.log(t)}))}function $(t,e,s){w.open(t,e,s)}function j(t,e){return new f(t,e,U,T,$).generateCard()}L.getInitialCardsAndUserInfo().then((([t,e])=>{t.forEach((t=>{x.addItem(j(t,e._id),!1)})),n.textContent=e.name,a.textContent=e.about,o.src=e.avatar})).catch((t=>{console.log(t)})),s.addEventListener("click",(t=>{if(t.target.classList.contains("profile__edit")){const t=b.getUserInfo();r.value=t.name,i.value=t.job,c.classList.add("form__button_inactive"),S.open()}else{if(!t.target.classList.contains("profile__add"))return;l.classList.add("form__button_inactive"),k.open()}})),S.setEventListeners(),o.addEventListener("click",(()=>{y.open()})),y.setEventListeners(),C.setEventListeners(),k.setEventListeners(),w.setEventListeners(),Array.from(document.querySelectorAll(e.formSelector)).forEach((s=>{new t(e,s).enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,